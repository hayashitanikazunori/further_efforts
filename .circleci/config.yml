version: 2
jobs:
  build: # ワークフローを使用しない実行では、エントリポイントとして `build` ジョブが必要です
    parallelism: 3
    docker: # Docker でステップを実行します
      - image: circleci/ruby:2.7.1-node-browsers # このイメージをすべての `steps` が実行されるプライマリ コンテナとして使用します
        environment: # プライマリ コンテナの環境変数
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: further_efforts
          RAILS_ENV: test
      - image: circleci/postgres:12.3 # データベース イメージ
        environment: # データベースの環境変数
          POSTGRES_USER: further_efforts
          POSTGRES_DB: further_efforts_test
          POSTGRES_HOST_AUTH_METHOD: trust
          POSTGRES_PASSWORD: ""
    steps:
      - checkout

      - run:
          name: Bundler の指定
          command: bundle -v

      - restore_cache:
          keys:
            - rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
            - rails-demo-bundle-v2-

      - run:
          name: バンドル インストール
          command: bundle check --path vendor/bundle || bundle install --deployment

      - save_cache:
          key: rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      - restore_cache:
          keys:
            - rails-demo-yarn-{{ checksum "yarn.lock" }}
            - rails-demo-yarn-

      - run:
          name: Yarn のインストール
          command: yarn install --cache-folder ~/.cache/yarn

      - save_cache:
          key: further_efforts-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: DB の待機
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: データベースのセットアップ
          command: bin/rails db:schema:load --trace

      - run:
          name: RSpecの実行
          command: |
            bundle exec rspec --profile 10 \
                      --format RspecJunitFormatter \
                      --out test_results/rspec.xml \
                      --format progress \
                      $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      - store_test_results:
        path: test_results